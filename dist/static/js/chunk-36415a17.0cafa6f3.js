(window.webpackJsonp=window.webpackJsonp||[]).push([["chunk-36415a17"],{"05e7":function(n,e,t){"use strict";t.r(e),e.default="# 组件更新日志\n### 2022年09月08日10:15:08\n-moon-table-pagination 新增loading props属性，外部控制表格显示loading\n-新增moon-if-show组件\n### 2022年09月07日15:45:26\n- 新增moon-html-dom组件，\n- moon-table-pagination当总条数小于页面最小展示条数时，不显示分页组件\n### 2022年09月06日11:43:09\n- 薪资moon-phone-demo组件\n### 2022年09月02日15:32:39\n- moon-table-pagination 增加顶部按钮配置。topButtonList。\n- 新增moon-dropdown组件\n\n### 2022年08月15日11:08:20\n- moon-table-pagination 为getDataList方法增加防抖\n### 2022年08月10日09:14:40\n- 新增moon-menu组件\n### 2022年08月02日14:36:52\n- 代码整理与优化和完善\n###  2022年08月01日15:34:06\n - moon-form-template 新增validate_cb方法。返回校验结果的同时将错误对象也返回,完善md文档\n - moon-query-template 添加keyEnterQuery属性，用户控制键盘回车键是否对查询事件的响应 \n### 2022年08月01日13:43:51\n - moon-table-pagination sortableOptions中的函数属性自动加上当前表格数据参数\n\n### 2022年07月30日23:06:46\n- 组件代码整理优化\n- moon-table-pagination 新增表格拖拽排序属性draggable，以及配置属性sortableOptions，新增响应拖拽结束后事件drag-end\n### 2022年07月29日22:40:08\n-moon-validator组件改进 validate-prop属性可以同时绑定在多个元素上\n### 2022年07月29日14:07:22\n- moon-table-pagination props新增data，用于外部传入表格数据。当掺入data时，分页器将不再起作用，\n- moon-validator 组件新增reload方法，用于配合拖拽组件。\n\n### 2022年07月29日10:31:33\n- 新增moon-validator组件\n### 2022年07月27日14:29:39\n- moon-form-template  disabled的字体颜色改成#303133\n\n### 2022年07月27日11:50:02\n- moon-table-pagination 设置show-overflow-tooltip默认为true\n- moon-form-template 当br值为falsely时不再换行，空字符串区除外\n- moon-query-template 中br的作用也通moon-form-template一样，只有在br值不为falsely时起作用，空字符串区除外\n### 2022年07月26日18:48:58\n-  新增moon-transition组件 \n-  优化moon-query-template 移除响应式代码\n-  优化moon-form-template  元素的span累计24后重新用el-row渲染后面的元素\n\n### 组件更名初始化 2022年07月26日14:32:52"},"1ace":function(n,e,t){"use strict";t.r(e),e.default="# moon-menu\n\n### 作者：闰月飞鸟；时间：2022/08/09\n\n### 开发目的\n\n-   扩展 el-menu 功能，新增额外的样式修改属性。对过长的标题进行省略展示，同时鼠标悬停显示全部内容\n-   继承 el-menu 所有属性,事件和方法\n-   继承 SubMenu 非数据关联的所有属性。如 popper-class show-timeout\n\n### Props\n\n| 参数                         | 说明                                                                                            | 类型    | 可选值 | 默认值                                               |\n| ---------------------------- | ----------------------------------------------------------------------------------------------- | ------- | ------ | ---------------------------------------------------- |\n| el-menu 所有属性             | -                                                                                               | -       | -      | -                                                    |\n| hoverBgColor                 | 菜单 hover 背景颜色                                                                             | String  | -      | 默认 element-ui 颜色                                 |\n| activeBgColor                | 菜单 active 背景颜色                                                                            | String  | -      | 默认 element-ui 颜色                                 |\n| openBgColor                  | 菜单展开 open 背景颜色                                                                          | String  | -      | 默认 element-ui 颜色                                 |\n| openTextColor                | 菜单展开 open 字体颜色                                                                          | String  | -      | 默认 element-ui 颜色                                 |\n| itemStyle                    | 菜单内联样式                                                                                    | Object  | -      | {}                                                   |\n| subMenu 非数据关联的所有属性 | -                                                                                               | -       | -      | -                                                    |\n| menuList                     | 菜单数据                                                                                        | Array   | -      | []                                                   |\n| isFalt                       | 菜单数据是否是扁平化的树层级数据，true 时组件会自动将 menuList 格式化为需要的树数据，否则不处理 | Boolean | -      | true                                                 |\n| showEllipsisTip              | 当文字过长时是否出现省略号，鼠标悬停是否以 tip 的形式显示全名                                   | Boolean | -      | true                                                 |\n| options                      | 组件 props 属性对应数据中的属性字段,以及构建树形数据的id，pId，和展示的name                                                             | Object  | -      | { index: 'id', route: 'route', disabled: 'disabled'， id: 'id', pId: 'pId', name: 'name'},其中，index,route,disabled, name 指定的属性可以是路径，如name:\"meta.title\"|\n\n### Slot\n\n| 名称 | 说明           | 参数         |\n| ---- | -------------- | ------------ |\n| icon | 图表作用域插槽 | 当前节点对象 |\n\n### Event\n| 名称 | 说明           | 参数         |\n| ---- | -------------- | ------------ |\n| menu-click | 菜单点击事件 | 当前节点对象 |\n\n\n\n```\n <template>\n    <div style=\"width: 100%\">\n        <moon-menu\n            class=\"el-menu-horizontal-demo\"\n            background-color=\"#3c7ec3\"\n            hoverBgColor=\"#3c7ec3\"\n            text-color=\"#fff\"\n            active-text-color=\"#fff\"\n            activeBgColor=\"#2066b0\"\n            :collapse=\"isCollapse\"\n            :menuList=\"navList\"\n            :itemStyle=\"{ border: 'none', padding: '40px 30px', fontSize: '15px' }\"\n            mode=\"horizontal\"\n        >\n            <template #icon=\"{ node }\">\n                <icon-svg v-if=\"node.icon\" :name=\"node.icon\" style=\"margin-right: 10px\"></icon-svg>\n            </template>\n        </moon-menu>\n        <el-radio-group v-model=\"isCollapse\" style=\"margin-bottom: 20px\">\n            <el-radio-button :label=\"false\">展开</el-radio-button>\n            <el-radio-button :label=\"true\">收起</el-radio-button>\n        </el-radio-group>\n\n        <moon-menu\n            class=\"el-menu-vertical-demo\"\n            background-color=\"#3c7ec3\"\n            hoverBgColor=\"#3c7ec3\"\n            text-color=\"#fff\"\n            active-text-color=\"#fff\"\n            activeBgColor=\"#2066b0\"\n            :menuList=\"menu\"\n            :collapse=\"isCollapse\"\n        >\n            <template #icon=\"{ node }\">\n                <icon-svg v-if=\"node.icon\" :name=\"node.icon\" style=\"margin-right: 10px\"></icon-svg>\n            </template>\n        </moon-menu>\n    </div>\n</template>\n<script>\nexport default {\n    inheritAttrs: false,\n    name: '',\n    props: {},\n    components: {   },\n    created() {},\n    mounted() {},\n    data() {\n        return {\n            isCollapse: false,\n            menu: [\n                {\n                    id: 'dddd',\n                    pId: '',\n                    name: 'xxxx'\n                },\n                {\n                    id: '6d9af07d8b374d3988eaaf5e9556e0b0',\n                    pId: '4c8dfabeea4f4189b5bc3e8d54f93483',\n                    name: '工作台',\n                    icon: ''\n                },\n                {\n                    id: '038fd2bcdfbe4cdd80d8e9806f786f1c',\n                    pId: 'e2eedba3f5e4497c94874a102392016d',\n                    name: '企业综合查询',\n                    icon: 'chaxun'\n                },\n                {\n                    id: '2d360e3b46e844319c8027eed10ad9f0',\n                    pId: '63dcaeddef534f589b7f2331b18b240b',\n                    name: '企业总览',\n                    icon: ''\n                },\n                {\n                    id: '54e27e0f5e76401eb093b02e3c4922ee',\n                    pId: 'e9b967530096444db095ffef70a57d3f',\n                    name: '企业分类评价列表',\n                    icon: ''\n                },\n                {\n                    id: '66ab363e48e240ce8870a60e11e1b233',\n                    pId: '42bf0246e4344e54ac9edd483929a18d',\n                    name: '培育企业管理',\n                    icon: 'chaxun'\n                },\n                {\n                    id: '88221e5e2e3f473dadc8db4e73fe5249',\n                    pId: '67a29d39f5e211eca43e00ff4184a389',\n                    name: '监测概览',\n                    icon: ''\n                },\n                {\n                    id: 'e2eedba3f5e4497c94874a102392016d',\n                    pId: '4c8dfabeea4f4189b5bc3e8d54f93483',\n                    name: '企业综合管理',\n                    icon: 'system'\n                },\n                {\n                    id: '6a03bb7ce1024ca7835cdb881b8207ea',\n                    pId: '63dcaeddef534f589b7f2331b18b240b',\n                    name: '重点企业分析',\n                    icon: ''\n                },\n                {\n                    id: '79316763f5e311eca43e00ff4184a389',\n                    pId: '42bf0246e4344e54ac9edd483929a18d',\n                    name: '科小备案管理',\n                    icon: 'chaxun'\n                },\n                {\n                    id: 'b5f775a3f5e311eca43e00ff4184a389',\n                    pId: '67a29d39f5e211eca43e00ff4184a389',\n                    name: '监测动态信息',\n                    icon: ''\n                },\n                {\n                    id: 'b9563880f5e211eca43e00ff4184a389',\n                    pId: 'e2eedba3f5e4497c94874a102392016d',\n                    name: '企业云图',\n                    icon: 'corpUserNum'\n                },\n                {\n                    id: 'e9b967530096444db095ffef70a57d3f',\n                    pId: '4c8dfabeea4f4189b5bc3e8d54f93483',\n                    name: '企业分类评价',\n                    icon: 'building'\n                },\n                {\n                    id: 'f010023d6ace4abc91653ebe2566e870',\n                    pId: 'e9b967530096444db095ffef70a57d3f',\n                    name: '企业分类评价统计',\n                    icon: ''\n                },\n                {\n                    id: '5c085d2b79884e5c86a124ed0491e8da',\n                    pId: '63dcaeddef534f589b7f2331b18b240b',\n                    name: '能耗分析',\n                    icon: ''\n                },\n                {\n                    id: '63dcaeddef534f589b7f2331b18b240b',\n                    pId: '4c8dfabeea4f4189b5bc3e8d54f93483',\n                    name: '企业专题分析',\n                    icon: 'building'\n                },\n                {\n                    id: '793167adf5e311eca43e00ff4184a389',\n                    pId: '42bf0246e4344e54ac9edd483929a18d',\n                    name: '快审备案管理',\n                    icon: 'config'\n                },\n                {\n                    id: '8127fa16777d470487fec51ca86eac51',\n                    pId: 'e2eedba3f5e4497c94874a102392016d',\n                    name: '企业标签管理',\n                    icon: 'corpUserNum'\n                },\n                {\n                    id: 'b5f775c0f5e311eca43e00ff4184a389',\n                    pId: '67a29d39f5e211eca43e00ff4184a389',\n                    name: '企业监测设置',\n                    icon: ''\n                },\n                {\n                    id: '2deaccf499ee4bdc93fdeeaba10c02d6',\n                    pId: '63dcaeddef534f589b7f2331b18b240b',\n                    name: '科创能力分析',\n                    icon: ''\n                },\n                {\n                    id: '42bf0246e4344e54ac9edd483929a18d',\n                    pId: '4c8dfabeea4f4189b5bc3e8d54f93483',\n                    name: '高成长型企业识别',\n                    icon: 'sousuo'\n                },\n                {\n                    id: '793167c9f5e311eca43e00ff4184a389',\n                    pId: '42bf0246e4344e54ac9edd483929a18d',\n                    name: '推荐培育识别',\n                    icon: 'copy'\n                },\n                {\n                    id: 'b5f775d1f5e311eca43e00ff4184a389',\n                    pId: '67a29d39f5e211eca43e00ff4184a389',\n                    name: '异常企业分析',\n                    icon: ''\n                },\n                {\n                    id: '67a29d39f5e211eca43e00ff4184a389',\n                    pId: '4c8dfabeea4f4189b5bc3e8d54f93483',\n                    name: '企业监测预警',\n                    icon: 'sousuo'\n                },\n                {\n                    id: '793167d8f5e311eca43e00ff4184a389',\n                    pId: '42bf0246e4344e54ac9edd483929a18d',\n                    name: '推荐培育识别配置',\n                    icon: 'config'\n                },\n                {\n                    id: 'ab89d99bfc2447ca83dcd680b951b675',\n                    pId: '63dcaeddef534f589b7f2331b18b240b',\n                    name: '税收分析',\n                    icon: ''\n                },\n                {\n                    id: 'c409e99f888e40378afd09053f055ba1',\n                    pId: '63dcaeddef534f589b7f2331b18b240b',\n                    name: '财政补贴分析',\n                    icon: ''\n                }\n            ],\n            navList: [\n                {\n                    name: '蜀心办',\n                    applicationCode: 'SSGRID_WEB',\n                    url: '',\n                    icon: 'xiangqu',\n                    moduleStatus: '1006_NORMAL',\n                    orderNum: 1,\n                    target: '0',\n                    isFullScreen: '0',\n                    isShowNav: '1',\n                    appPath: '',\n                    buttonList: null,\n                    id: 'cc3857711dfe421bb4c8622216d73bc2',\n                    isDel: 0,\n                    creator: '1',\n                    createdTime: '2022-08-05 10:22:32',\n                    lastUpdatedBy: '1',\n                    lastUpdatedTime: '2022-08-05 10:31:03',\n                    createdUnit: '4855ba5babad493f81650c80d5e282c0',\n                    lastUpdatedUnit: '4855ba5babad493f81650c80d5e282c0'\n                },\n                {\n                    name: '企业监测',\n                    applicationCode: 'SSGRID_WEB',\n                    url: '',\n                    icon: 'pop',\n                    moduleStatus: '1006_NORMAL',\n                    orderNum: 2,\n                    target: '1',\n                    isFullScreen: '0',\n                    isShowNav: '0',\n                    appPath: '',\n                    buttonList: null,\n                    id: '4c8dfabeea4f4189b5bc3e8d54f93483',\n                    isDel: 0,\n                    creator: '1',\n                    createdTime: '2022-06-09 11:35:35',\n                    lastUpdatedBy: '1',\n                    lastUpdatedTime: '2022-07-05 10:31:55',\n                    createdUnit: '4855ba5babad493f81650c80d5e282c0',\n                    lastUpdatedUnit: '4855ba5babad493f81650c80d5e282c0'\n                },\n                {\n                    name: '资源管理',\n                    applicationCode: 'SSGRID_WEB',\n                    url: '',\n                    icon: 'qsy',\n                    moduleStatus: '1006_NORMAL',\n                    orderNum: 3,\n                    target: '0',\n                    isFullScreen: '0',\n                    isShowNav: '1',\n                    appPath: 'zjgResource',\n                    buttonList: null,\n                    id: '6a145f36154e4abd8f016424a7e9e733',\n                    isDel: 0,\n                    creator: '1',\n                    createdTime: '2022-06-27 13:29:36',\n                    lastUpdatedBy: '1',\n                    lastUpdatedTime: '2022-08-03 15:00:55',\n                    createdUnit: '4855ba5babad493f81650c80d5e282c0',\n                    lastUpdatedUnit: '4855ba5babad493f81650c80d5e282c0'\n                },\n                {\n                    name: '产业发展',\n                    applicationCode: 'SSGRID_WEB',\n                    url: '',\n                    icon: 'mudedi',\n                    moduleStatus: '1006_NORMAL',\n                    orderNum: 4,\n                    target: '0',\n                    isFullScreen: '0',\n                    isShowNav: '1',\n                    appPath: '',\n                    buttonList: null,\n                    id: '8eda2c2c1582425bacc5a287b6c4bc85',\n                    isDel: 0,\n                    creator: '1',\n                    createdTime: '2022-06-27 13:29:58',\n                    lastUpdatedBy: '1',\n                    lastUpdatedTime: '2022-07-05 10:31:05',\n                    createdUnit: '4855ba5babad493f81650c80d5e282c0',\n                    lastUpdatedUnit: '4855ba5babad493f81650c80d5e282c0'\n                },\n                {\n                    name: '数智招商',\n                    applicationCode: 'SSGRID_WEB',\n                    url: '',\n                    icon: 'money',\n                    moduleStatus: '1006_NORMAL',\n                    orderNum: 5,\n                    target: '0',\n                    isFullScreen: '0',\n                    isShowNav: '1',\n                    appPath: '',\n                    buttonList: null,\n                    id: '9e00c1f47fee43adb570cebd3f6bf912',\n                    isDel: 0,\n                    creator: '1',\n                    createdTime: '2022-06-27 13:30:13',\n                    lastUpdatedBy: '1',\n                    lastUpdatedTime: '2022-07-05 10:31:31',\n                    createdUnit: '4855ba5babad493f81650c80d5e282c0',\n                    lastUpdatedUnit: '4855ba5babad493f81650c80d5e282c0'\n                },\n                {\n                    name: '惠企赋能',\n                    applicationCode: 'SSGRID_WEB',\n                    url: '',\n                    icon: 'xz',\n                    moduleStatus: '1006_NORMAL',\n                    orderNum: 6,\n                    target: '0',\n                    isFullScreen: '0',\n                    isShowNav: '1',\n                    appPath: '',\n                    buttonList: null,\n                    id: '6aa1182341074f1b8fee79c0188cd84e',\n                    isDel: 0,\n                    creator: '1',\n                    createdTime: '2022-06-27 13:30:28',\n                    lastUpdatedBy: '1',\n                    lastUpdatedTime: '2022-07-05 10:32:20',\n                    createdUnit: '4855ba5babad493f81650c80d5e282c0',\n                    lastUpdatedUnit: '4855ba5babad493f81650c80d5e282c0'\n                },\n                {\n                    name: '经济服务',\n                    applicationCode: 'SSGRID_WEB',\n                    url: '',\n                    icon: 'usersc',\n                    moduleStatus: '1006_NORMAL',\n                    orderNum: 7,\n                    target: '0',\n                    isFullScreen: '0',\n                    isShowNav: '1',\n                    appPath: '',\n                    buttonList: null,\n                    id: '62854e7643364741a9ec5ec03158da36',\n                    isDel: 0,\n                    creator: '1',\n                    createdTime: '2022-06-27 13:30:43',\n                    lastUpdatedBy: '1',\n                    lastUpdatedTime: '2022-07-05 10:32:44',\n                    createdUnit: '4855ba5babad493f81650c80d5e282c0',\n                    lastUpdatedUnit: '4855ba5babad493f81650c80d5e282c0'\n                },\n                {\n                    name: '系统管理',\n                    applicationCode: 'SSGRID_WEB',\n                    url: '',\n                    icon: 'system',\n                    moduleStatus: '1006_NORMAL',\n                    orderNum: 8,\n                    target: '1',\n                    isFullScreen: '1',\n                    isShowNav: '1',\n                    appPath: 'system',\n                    buttonList: null,\n                    id: '546183f15bd04059aaa139ff538d12a6',\n                    isDel: 0,\n                    creator: '1',\n                    createdTime: '2022-06-27 13:31:38',\n                    lastUpdatedBy: '1',\n                    lastUpdatedTime: '2022-07-05 10:33:03',\n                    createdUnit: '4855ba5babad493f81650c80d5e282c0',\n                    lastUpdatedUnit: '4855ba5babad493f81650c80d5e282c0'\n                }\n            ]\n        };\n    },\n    watch: {},\n    computed: {},\n    methods: {\n        change(e) {},\n        handleOpen(key, keyPath) {\n            //console.log(key, keyPath);\n        },\n        handleClose(key, keyPath) {\n            //console.log(key, keyPath);\n        }\n    }\n};\n<\/script>\n<style lang=\"less\" scoped>\n.div {\n    float: right;\n    padding: 10px;\n    border: 1px solid red;\n}\n.clear-float {\n    &::before,\n    &::after {\n        content: 'ddddd';\n        display: block;\n        height: 0;\n        visibility: hidden;\n        clear: both;\n    }\n}\n.el-menu-vertical-demo:not(.el-menu--collapse) {\n    width: 240px;\n}\n.el-menu-horizontal-demo {\n    width: 100%;\n}\n</style>\n\n\n```\n"},"2a5b":function(n,e,t){"use strict";t.r(e),e.default='# moon-validator\n### 作者：闰月飞鸟；时间：2022年07月27日13:41:08\n### 开发目的\n- 对对象数据，对象数组，数组对象类型的数据进行检验，同时将将校验结果反馈到数据对应的dom元素上\n\n### Props \n参数 |说明|类型|可选值|默认值\n---|---|---|---|---\nmode|校验的对象|Boolean，Array| -|{}\nrules|校验规则，参考[async-validator](https://github.com/yiminghe/async-validator)|Object|-|{}\nshowErrorMsgTip|是否以tip的形式显示校验错误信息|Boolean|-|true\n\n\n ###  Slot\n  名称 |说明| 参数\n---|---|---|\ndefautl|-|-\n\n\n### Slot-Dom\n|说明| \n---|\n将mode中需要校验的属性的路径，绑定到需要与之对应的dom节点上validate-prop属性中即可，可以同时绑定在多个元素上|\n例：mode={a:"",c:{e:\'e\',d:[{f:\'f\'}]}}  mode.a的路径就是\'a\'。mode.c.e=>\'c.e\',mode.c.d[0].f=>\'c.d.0.f\' |\n\n ###  Methods\n  名称 |说明| 参数|返回值\n---|---|---|---|\nvalidate|校验整个对象。并返回校验结果|showMessage：Boolean,是否用message抛出第一个错误信息。|{flag,errors,fields,fieldKeys} flag：校验结果，true成功，false失败。errors，fields，失败后返回数据，参考[async-validator](https://github.com/yiminghe/async-validator)，fieldKeys：校验单元对应的key值\nreload|重载配置，在数组只是元素交换位置时，需要调用该方法。重置校验配置，如配合拖拽组件时，拖拽成功后需要调用此方法|-|-\n# Example\n``` javascript\n<template>\n    <div>\n        <el-divider>moon-validator数据视图校验器</el-divider>\n        <p>moon-validator支持对象与数组，校验结果同时展示在所validate-prop属性值的元素上 若组件嵌套。对内嵌的moon-validator中的内容不做校验</p>\n        <moon-validator ref="moonValidator1" :mode="mode" :rules="rules">\n            <div>\n                姓名\n                <el-input v-model="mode.name" validate-prop="name"></el-input>\n            </div>\n            <div v-for="(value, index) in mode.family" :key="index">\n                {{ value.label }} <el-input v-model="value.name" :validate-prop="`family.${index}.name`"></el-input>\n                <el-button @click="mode.family.splice(index, 1)">remove</el-button>\n            </div>\n            <el-button @click="validate(1)">验证表单1</el-button>\n            <el-button @click="clear(1)">清除表单1验证css</el-button>\n            <el-button @click="mode.family.push({ label: Math.random(10), name: \'\' })">add</el-button>\n\n            <div>\n                <el-divider>moon-validator内嵌</el-divider>\n                <moon-validator ref="moonValidator2" :mode="mode2" :rules="rules">\n                    <div validate-prop="name">\n                        姓名\n                        <el-input v-model="mode2.name" disabled></el-input>\n                        <el-select v-model="mode2.name" placeholder="请选择" clearable>\n                            <el-option label="item.label" value="item.value"> </el-option>\n                            <el-option label="item.label1" value="item.value2"> </el-option>\n                        </el-select>\n                        <el-button>dd</el-button>\n                    </div>\n                    <div v-for="(value, index) in mode2.family" :key="index">{{ value.label }} <el-input v-model="value.name" :validate-prop="`family.${index}.name`"></el-input></div>\n                </moon-validator>\n            </div>\n        </moon-validator>\n        <el-button @click="validate(2)">验证表单2</el-button>\n        <el-button @click="clear(2)">清除表单2验证css</el-button>\n        <el-divider>moon-validator 数组对象</el-divider>\n        <moon-validator ref="moonValidator3" :mode="range" :rules="rangeRules">\n            开始\n            <el-input v-model="range[0].begin" validate-prop="0.begin"></el-input>\n            结束\n            <el-input v-model="range[0].end" validate-prop="0.end"></el-input>\n        </moon-validator>\n        <el-button @click="validate(3)">验证表单3</el-button>\n        <el-button @click="clear(3)">清除表单3验证css</el-button>\n        <el-divider>moon-validator 数组</el-divider>\n        <moon-validator ref="moonValidator4" :mode="range2" :rules="rangeRules2">\n            开始\n            <el-input v-model="range2[0]" validate-prop="0"></el-input>\n            结束\n            <el-input v-model="range2[1]" validate-prop="1"></el-input>\n        </moon-validator>\n        <el-button @click="validate(4)">验证表单3</el-button>\n        <el-button @click="clear(4)">清除表单3验证css</el-button>\n    </div>\n</template>\n<script>\nexport default {\n    inheritAttrs: false,\n    name: \'\',\n    props: {},\n    components: {},\n    created() {},\n    mounted() {},\n    data() {\n        return {\n            mode: {\n                name: \'\',\n                family: [\n                    {\n                        label: \'父亲\',\n                        name: \'\'\n                    },\n                    {\n                        label: \'母亲\',\n\n                        name: \'\'\n                    },\n                    {\n                        label: \'子女\',\n                        name: \'\'\n                    }\n                ]\n            },\n            mode2: {\n                name: \'\',\n                family: [\n                    {\n                        label: \'父亲\',\n                        name: \'\'\n                    },\n                    {\n                        label: \'母亲\',\n\n                        name: \'\'\n                    },\n                    {\n                        label: \'子女\',\n                        name: \'\'\n                    }\n                ]\n            },\n            rules: {\n                name: [\n                    {\n                        type: \'string\',\n                        required: true,\n                        message: \'请输入姓名\'\n                    }\n                ],\n                family: [\n                    {\n                        type: \'array\',\n                        defaultField: {\n                            type: \'object\',\n                            required: true,\n                            fields: {\n                                name: [\n                                    {\n                                        type: \'string\',\n                                        required: true,\n                                        // message: \'家庭姓名不能为空\',\n                                        validator(rule, value, callback, source, options) {\n                                            if (!value) {\n                                                callback(source.label + \'姓名不能为空\');\n                                            } else {\n                                                callback();\n                                            }\n                                        }\n                                    },\n                                    {\n                                        validator(rule, value, callback, source, options) {\n                                            if (value.length < 4) {\n                                                callback(\'名字长度不能小于4\');\n                                            } else {\n                                                callback();\n                                            }\n                                        }\n                                    }\n                                ]\n                            }\n                        }\n                    }\n                ]\n            },\n            range: [{ begin: \'\', end: \'\' }],\n            rangeRules: {\n                defaultField: {\n                    type: \'object\',\n                    required: true,\n                    fields: {\n                        begin: { required: true, message: \'请输入开始\' },\n                        end: { required: true, message: \'请输入结束\' }\n                    }\n                }\n            },\n            range2: [\'\', \'\'],\n            rangeRules2: {\n                /* fields: {\n                    0: { required: true, message: \'请输入开始区间\' },\n                    1: { required: true, message: \'请输入结束区间\' },\n                }, */\n                defaultField: {\n                    required: true,\n                    message: \'不能为空\'\n                }\n            }\n        };\n    },\n    watch: {},\n    computed: {},\n    methods: {\n        validate(n) {\n            this.$refs[`moonValidator${n}`].validate();\n        },\n        clear(n) {\n            this.$refs[`moonValidator${n}`].clearValidate();\n        }\n    }\n};\n<\/script>\n<style lang="less" scoped></style>\n\n\n```'},"2ed2":function(n,e,t){"use strict";t.r(e),e.default="# moon-if-show\n\n### 作者：闰月飞鸟；时间：2021/11/23\n### 开发目的\n- 实现组件缓存\n- tab标签内容，初次加载页面时，只渲染对应下标的tab页面，\n- 凡是渲染过的tab页，下次打开则不在重新渲染\n \n\n### Props \n参数 |说明|类型|可选值|默认值\n---|---|---|---|--- \nshow|组件显示隐藏|Boolean|-|false \ndelay|第一次延时渲染时间|Number|-|0 \n\n \n ### slot\n 参数 |说明\n ---|---\n default|-\n \n``` javascript\n\n<moon-if-show :show='show'>xxxx</moon-if-show>\n\n```\n\n \n\n"},"34c9":function(n,e,t){"use strict";t.r(e),e.default="# moon-dv-text\n\n-   文本组件\n\n### Props\n\n| 参数  | 说明     | 类型 | 可选值 | 默认值   |\n| ----- | -------- | ---- | ------ | -------- |\n| value | 文本内容 | -    | -      |  |\n\n\n### Slot\n\n| 参数    | 说明 |\n| ------- | ---- |\n| prefix | 文本前缀 |\n| suffix | 文本后缀 |\n"},"40e0":function(n,e,t){"use strict";t.r(e),e.default="\n# moon-transition\n\n### 作者：闰月飞鸟；时间：2020/04/02\n### 开发目的\n- 封装动画组件，自定义动画css,animate css动画\n\n\n### moon-query-template Props \n参数 |说明|类型|可选值|默认值\n---|---|---|---|---\nname|动画名|String|-|’‘\nmode|transition 组件的mode属性|-|-|out-in\n\n ###  Slot\n  名称 |说明| 参数\n---|---|---|\ndefautl|-|-\n "},4224:function(n,e,t){"use strict";t.r(e),e.default="# moon-table-pagination\n\n### 作者：闰月飞鸟；时间：2020/04/02\n\n### 开发目的\n\n-   将 table 组件和 pagination 封装在一起，让 pagination 的逻辑从业务逻辑中独立出来。当总条数小于页面最小展示条数时，不显示分页组件\n-   为 table-tree 字节点添加前端懒加载\n\n### Props\n\n| 参数               | 说明                                                                                                                                                                                                                                                                                                                               | 类型            | 可选值                             | 默认值                                                                               |\n| ------------------ | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------------- | ---------------------------------- | ------------------------------------------------------------------------------------ |\n| --                 | el-table 组件自带的 props                                                                                                                                                                                                                                                                                                          | Object          | -                                  | -                                                                                    |\n| --                 | el-pagination 组件自带的 props                                                                                                                                                                                                                                                                                                     | -               | -                                  | -                                                                                    |\n| data               | el-table 的 data 传值，若外部传入 data 则使用外部传入的 data 渲染 dom，同时内置的分页组件禁用                                                                                                                                                                                                                                      | Array           | -                                  | []                                                                                   |\n| dataInterface      | 获取数据的接口, 可以是的 Url, 或者 http 函数接口，                                                                                                                                                                                                                                                                                 | string/function | -                                  | ''                                                                                   |\n| pagination         | 是否展示分页组件                                                                                                                                                                                                                                                                                                                   | Boolean         | true/false                         | true                                                                                 |\n| condition          | 数据接口参数                                                                                                                                                                                                                                                                                                                       | Object          | -                                  | {}                                                                                   |\n| tableWidth         | 表宽                                                                                                                                                                                                                                                                                                                               | String          | -                                  | auto                                                                                 |\n| responseType       | 数据返回格式,项目里要统一                                                                                                                                                                                                                                                                                                          | Object          | -                                  | { list: 'data.page.list', totalCount: 'data.page.totalCount' //当不分页时可以不指定} |\n| treeOptions        | 渲染table-tree，树形结构数据配置，只有指定的，id与parentId都在数据项中时才渲染为table-tree段                                                                                                                                                                                                                                                                                          | Object          | -                                  | {id: 'id', parentId: 'parentId'}                                                     |\n| draggable          | 表格是否可以拖拽排序                                                                                                                                                                                                                                            | Boolean         | -                                  | false                                                                                |\n| orderAttrName      | 开启拖拽排序时，用于将当前排序号赋值到当前数据对象中 orderAttrName 所指定的属性字段上                                                                                                                                                                                                                                              | String          | -                                  | orderNum                                                                             |\n| sortableOptions    | 拖拽排序库配置项 [Sortable](https://github.com/SortableJS/Sortable)，onEnd 属性函数默认自动转换表格数据位置并发起 drag-end 事件，若 sortableOptions 传入，则执行 sortableOptions 传入的 onEnd 函数， 每个传入的函数加上当前列表数据作为参数，例如：onEnd: function (evt，listData) onMove: function ( evt, originalEvent,listData) | Object          | -                                  | {}                                                                                   |\n| topButtonList      | 顶部按钮列表，                                                                                                                                                                                                                                                                                                                     | Array           | ['add','delete','import','export'] | []                                                                                   |\n| loading            | 外部控制表格显示 loading                                                                                                                                                                                                                                                                                                           | Boolean         | -                                  | true                                                                                 |\n| paginationPosition | pagination 位置                                                                                                                                                                                                                                                                                                                    | Array           | ['bttom/top','left/center/right']  | ['bottom','center']                                                                  |\n\n### Slot\n\n| 名称            | 说明                                                                                     | 作用域参数            |\n| --------------- | ---------------------------------------------------------------------------------------- | --------------------- |\n| defalut         | el-table 的 slot                                                                         | -                     |\n| list            | 作用域 slot 接受当前列表数据，可用于非表格布局                                           | -                     |\n| btn-add-text    | 顶部新增按钮文字                                                                         | -                     |\n| btn-delete-text | 顶部删除按钮文字                                                                         | -                     |\n| btn-export-text | 顶部导出按钮文字                                                                         | -                     |\n| btn-import-text | 顶部导入按钮文字                                                                         | -                     |\n| btn-left        | 顶部左侧，                                                                               | 表格统计的 total 数据 |\n| btn-right       | 顶部右侧                                                                                 | 表格统计的 total 数据 |\n| drag-left       | 当开启排序时有效，用于展示排序列左边的列，应用场景：当同时有 select 列且需要放在最左侧时 | -                     |\n\n### Event\n\n| 名称                  | 说明                                                                                                       | 参数             |\n| --------------------- | ---------------------------------------------------------------------------------------------------------- | ---------------- |\n| --                    | el-table 所有事件                                                                                          | -                |\n| response              | 接口返回所有数据                                                                                           | -                |\n| response-data         | 接口返回数据                                                                                               | -                |\n| view-data             | 当前视图展示的数据。当非 table-tee 时，返回的数据与 response-data 一致                                     | -                |\n| total                 | 返回总数                                                                                                   | -                |\n| drag-end              | 返回拖拽排序后表格中的数据,若 moon-table-pagination 包含在 moon-validate 中，会自动刷新 moon-validate 配置 | tableData:Array  |\n| update:table-selected | 当有 select 项时，返回当前选择的数据项，selection-change 的 sync 语法糖                                    | 当前选择的数据项 |\n| btn-add               | 触发顶部新增按钮事件                                                                                       | -                |\n| btn-delete            | 触发顶部删除按钮事件                                                                                       | 当前选择的数据项 |\n| btn-export            | 触发顶部导出按钮事件                                                                                       | -                |\n| btn-import            | 触发顶部导入按钮事件                                                                                       | -                |\n| update:loading        | 当内部 onloading 改变时触发外部 loading 改变                                                               | -                |\n| order-change          | 拖拽排序时触发                                                                                             | scope            |\n\n### Methods\n\n| 名称          | 说明                                        | 参数 |\n| ------------- | ------------------------------------------- | ---- |\n| getDataList   | 刷新 table                                  | -    |\n| getTableVnode | 获取 table 实例，用于调佣 el-table 实例方法 | -    |\n\n# css\n\n| 名称               | 说明                                                 | 参数 |\n| ------------------ | ---------------------------------------------------- | ---- |\n| .slot-header-style | 为自定义标题名称的元素提供 class;为 flex，上下布局。 | -    |\n"},"43b7":function(n,e,t){"use strict";t("a40c")},"69a8":function(n,e,t){"use strict";t.r(e),e.default="### isType\n\n-   类型判断\n-   @param obj 校验对象\n-   @param type 校验类型，可以是字符串或数组，数组为或结果。值为所有类型的实例化名。如 Object，Number...\n\n```javascript\nisType(obj, 'Array');\n```\n\n### getUUID\n\n-   得到一个 uuid\n-   @param prefix id 前缀\n\n```javascript\ngetUUID('moon-validate-');\n```\n\n### setEventListener\n\n-   @description 设置 window 或 document 事件监听,同时当所在的 vue 实例销毁时自动移除监听\n-   @param binder 指定 window 或 document 必传\n-   @param vm vue 实例 必传\n-   @param evtName 事件名 必传\n-   @param listener 监听函数 必传\n-   @param options 监听本身参数\n-   @return 返回一个移除监听函数\n\n```javascript\nsetEventListener(window, this, 'click', function () {});\n```\n\n### flatToTree\n\n-   @description 树形数据格式化\n-   @param {\\*} id\n-   @param {\\*} pId\n-   @param {\\*} children\n-   @return {treeData,leafs,objById,flatData} treeData,leafs,objById,flatData 中的对象的引用都相同\n-   @description treeData 格式化后的树数据\n-   @description leafs 所有叶子节点\n-   @description objById 以 id 为 key 的对象\n-   @description flatData 扁平化树数据\n-   @return 返回的数组对象中，对象属性新增两个属性\n-   @return {track} 所有当前节点的父节点 id，包括自身 ID\n-   @return {trigger} 所有当前节点的子节点 id，不包含自身 ID\n\n```javascript\nlet { treeData } = flatToTree(data, 'id', 'pId', 'children');\n```\n\n### InstanceValidate\n\n-   @description 校验目标对象是否符合输入的校验规则\n-   @return function 返回回调函数\n-                                @param targetObject 必选，目标对象 object\n-                                @param rules 必选，校验规则 object\n-                                @param validateCallback   可选，校验回调返回函数,errors,fields，两个参数， （errors, fields）=>{}\n-                                @return 校验结果\n\n```javascript\nconst form = {\n    catalogId: ''\n};\nconst rules = {\n    catalogId: [\n        {\n            required: true,\n            message: '请选择资源目录'\n        }\n    ]\n};\nInstanceValidate()({}, rules, (e) => {\n    console.log(e);\n});\n```\n\n### equalsString\n\n-   @description 移除两个字符串的空格换行符 tab 符号后判断是否相等。\n-   @author 闰月飞鸟\n-   @param {\\*} str1 string\n-   @param {\\*} str1 string\n-   @return Boolean\n\n```javascript\nequalsString(str1, str2);\n```\n\n### copyFlatData\n\n-   @description 拷贝扁平化的树形结构数据,即更新 id 与 pId\n-   @author 闰月飞鸟\n-   @param {\\*} option :id:string;pId:string;defaultPid:string;custom:Object,customFunction:({current:Object,oldObj:Object,idMap:Object})=>{}\n    -   @param {\\*} id\n    -   @param {\\*} pId\n    -   @param {\\*} defaultPid 默认 pid,当 pid 不是当前数组中任何一个对象时设置默值。\n    -   @param {\\*} custom 自定义替换\n    -   @param {\\*} customFunction 自定义替换函数 ({current:Object,oldObj:Object,idMap:Object})=>{}\n\n```javascript\ncopyFlatData({\n    source: jsonText.moonDvClipboardJsonStr,\n    id: 'id',\n    pId: 'parent',\n    defaultPid: 'page',\n    customFunction: ({ current, idMap }) => {\n        if (current.children) current.children = current.children.map((id) => idMap[id]).filter(Boolean);\n    }\n});\n```\n\n### asyncLoadElement\n\n-   @description 异步添加 dom 元素\n-   @author 闰月飞鸟\n-   @param {\\*} el 元素名\n-   @param {\\*} attrs 元素属性\n-   @param {\\*} appendToElement 添加到的目标元素,默认 document.head\n-   @return Boolean\n\n```javascript\nasyncLoadElement('script',{src;'',id:'xx'});\n```\n"},"70be":function(n,e,t){"use strict";t.r(e),e.default="# moon-dv-container\n\n-   datav 容器组件，用于包裹其他组件。\n\n### Slot\n\n| 参数    | 说明 |\n| ------- | ---- |\n| default | -    |\n"},"88e6":function(n,e,t){"use strict";t.r(e),e.default='\n# moon-form-template\n\n### 作者：闰月飞鸟；时间：2020/04/02\n### 开发目的\n- 将el-row 组件封装到el-from中，减少表单页面布局的复杂性。实现风格的统一性\n\n### moon-form-template Props \n参数 |说明|类型|可选值|默认值\n---|---|---|---|---\nel-form 所有属性| -|-|-|-\nel-col 所有属性| -|-|-|-\noffset|设置全局间隔，参考el-row el-col <el-form-item>上也能传offset，用于指定改元素的间隔|String, Number|-|0\ngutter|设置全局间隔|String, Number|-|0\nlayout|布局方式，多行布局row、浮动布局float,当float布局时，指定br换行将失效|String|-|row\n\n### el-form-item Props \n参数 |说明|类型|可选值|默认值\n---|---|---|---|---\nel-col |所有属性，单独设置属性会覆盖moon-form-template上设置的属性值，如span| -|-|-|-\nbr|当el-form-item上有br属性为truely时，强制换行换行，当float布局时，br换行将失效| -|-|-|-\n\n ###  Slot\n- el-form-item\n  \n\n### Methods\n名称 |说明| 参数\n---|---|---| \nvalidate|返回表单校验结果,成功true或失败false|-\nvalidate_cb|返回表单校验结果对象，同时将错误信息返回|-\nresetFields|作用通el-form|-\nclearValidate|作用通el-form|-\n```\n<template>\n    <div>\n        <moon-form-template ref="form" :offset="0" :span="12" :model="userEntity" labelWidth="8rem" :rules="rules">\n            <el-form-item label="用户名：" prop="username">\n                <el-input v-model="userEntity.username" :readonly="readonly"></el-input>\n            </el-form-item>\n            <el-form-item label="密码：" prop="password">\n                <el-input v-model="userEntity.password" :readonly="readonly"></el-input>\n            </el-form-item>\n            <el-form-item label="姓名：" prop="trueName">\n                <el-input v-model="userEntity.trueName" :readonly="readonly"></el-input>\n            </el-form-item>\n            <el-form-item label="用户编号：" prop="employeeNumber">\n                <el-input v-model="userEntity.employeeNumber" :readonly="readonly"></el-input>\n            </el-form-item>\n            <el-form-item label="性别：" prop="gender">\n                <selectWhether v-model="userEntity.gender" :disabled="readonly" :labels="[\'男\', \'女\']"></selectWhether>\n            </el-form-item>\n            <el-form-item label="证件类型：" prop="certificatetypeId">\n                <selectCode v-model="userEntity.certificatetypeId" :disabled="readonly" :code="31"></selectCode>\n            </el-form-item>\n            <el-form-item label="证件号码：" prop="certificateNumber">\n                <el-input v-model="userEntity.certificateNumber" :readonly="readonly"></el-input>\n            </el-form-item>\n            <el-form-item label="出生日期：" prop="dateOfBirth">\n                <el-date-picker v-model="userEntity.dateOfBirth" valueFormat="yyyy-MM-dd" type="date" :disabled="readonly"></el-date-picker>\n            </el-form-item>\n            <el-form-item label="用户类型：" prop="userType">\n                <selectCode v-model="userEntity.userType" :disabled="readonly" :code="17"></selectCode>\n            </el-form-item>\n            <el-form-item label="用户部门：" prop="unitId">\n                <dept v-model="userEntity.unitId" :disabled="readonly"></dept>\n            </el-form-item>\n            <el-form-item label="用户状态：" prop="userStatus">\n                <selectWhether v-model="userEntity.userStatus" :disabled="readonly" :labels="[\'禁用\', \'正常\']"></selectWhether>\n            </el-form-item>\n            <el-form-item label="邮箱地址：" prop="email">\n                <el-input v-model="userEntity.email" :readonly="readonly"></el-input>\n            </el-form-item>\n            <el-form-item label="隶属科室：" prop="sectionId">\n                <selectCode v-model="userEntity.sectionId" :disabled="readonly" :code="15"></selectCode>\n            </el-form-item>\n            <el-form-item label="职位：" prop="positionId">\n                <selectCode v-model="userEntity.positionId" :disabled="readonly" :code="16"></selectCode>\n            </el-form-item>\n            <el-form-item label="人员状态：" prop="accessionState">\n                <selectWhether v-model="userEntity.accessionState" :disabled="readonly" :labels="[\'在职\', \'离职\']"></selectWhether>\n            </el-form-item>\n            <el-form-item label="角色：" prop="roleIdList" :span="24">\n                <roleTransfer v-model="userEntity.roleIdList" :disabled="readonly"></roleTransfer>\n            </el-form-item>\n            <el-form-item label="备注：" prop="remark" :span="24">\n                <el-input v-model="userEntity.remark" :readonly="readonly" type="textarea"></el-input>\n            </el-form-item>\n        </moon-form-template>\n        <div class="buttonGroup" v-if="bus.mode != \'preview\'">\n            <el-button :disabled="buttonDisabled" type="primary" icon="fa fa-check" @click="onSave">保存</el-button>\n            <el-button icon="fa fa-times" @click="onBack">取消</el-button>\n        </div>\n    </div>\n</template>\n<script>\nexport default {\n    inheritAttrs: false,\n    name: \'\',\n    props: {},\n    created() {},\n    mounted() {},\n    data() {\n        return {\n            rules: {\n                password: [\n                    { required: true, message: \'密码必填\', trigger: \'blur\' },\n                    {\n                        pattern: /^.*(?=.{8,})(?=.*\\d)(?=.*[A-Za-z]{1,})(?=.*[!@#$%^&*?\\(\\)]).*$/,\n                        message: \'密码长度至少8位，且包含字母数字符号\',\n                        trigger: \'blur\'\n                    }\n                ]\n            }\n        };\n    },\n    methods: {\n        async onSave() {\n            let flag = this.$refs.form.validate();\n            if (!flag) return;\n            let serviceInterface = this.bus.mode == \'edit\' ? this.$service.user.update : this.$service.user.save;\n            let res = await serviceInterface(this.userEntity);\n            this.$saveMessage(res.status == 200);\n            this.onBack();\n            this.bus.updateMainView();\n        }\n    }\n};\n<\/script>\n<style lang="less" scoped>\n}\n</style>\n\n\n```'},"8c28":function(n,e,t){"use strict";t.r(e),e.default='# moon-phone-demo\n\n### 作者：闰月飞鸟；时间：2020/09/06\n\n### 开发目的\n\n- 用于 pc 端展示手机端页面\n- 可以直接传入一个链接，也能传入一个template模板代码\n\n### Props\n\n| 参数 | 说明           | 类型   | 可选值 | 默认值 |\n| ---- | -------------- | ------ | ------ | ------ |\n| src  | 手机端页面 url | string | -      | -      |\n|srcdoc| iframe属性。srcdoc优先src，接受html代码。或vue模版代码| string | -      | -      |\n```\n        <moon-phone-demo src="https://cn.vuejs.org/index.html"></moon-phone-demo>\n\n```\n'},"94b8":function(n,e,t){"use strict";t.r(e),e.default='\n# moon-query-template\n\n### 作者：闰月飞鸟；时间：2020/04/02\n### 开发目的\n- 统一查询视图风格，\n\n\n### moon-query-template Props \n参数 |说明|类型|可选值|默认值\n---|---|---|---|---\nmoon-form-template 所有属性| -|-|-|-\nwidth|设置默认展示区区域的宽度，若isAlign为true也是隐藏视图宽度。不设置时使用一行中所有html元素的默认宽度的总和值作为宽度|-|-|-\nisAlign|默认视图与折叠视图是否对齐排序，对齐排序则所有折叠的视图展示时都不会超出按钮所占垂直区域|-|-|-\nbr|收起 第一个带有br属性且值为truely的slot元素以及之后的所有元素 |-|-|-\nspan|所有元素累计的span为24时会在最后元素上加上br作为默认展示的视图，若br设置在span小于24，则重新累计 |-|-|-\nkeyEnterQuery|是否开启键盘回车触发查询事件|Boolean|-|true\n ###  Slot\n  名称 |说明| 参数\n---|---|---|\ndefautl|el-form-item组件|-\nbutton|按钮插槽|-\n\n### Event\n名称 |说明| 参数\n---|---|---|\nonQuery|查询按钮点击事件，同时响应键盘回车键|-\n \n ```\n<template>\n  <div class="queryCondition">\n    <moon-query-template width="90%" @onQuery="onQuery" :span="8" labelWidth="80px">\n      <el-form-item label="网点名称：">\n        <el-input clearable v-model="queryConditionEntity.networkName"></el-input>\n      </el-form-item>\n      <el-form-item label="所属地区：">\n        <areaCityToCommunity v-model="queryConditionEntity.areaId"></areaCityToCommunity>\n      </el-form-item>\n      <el-form-item label="网点级别：">\n        <selectCode code="20" v-model="queryConditionEntity.networkLevel"></selectCode>\n      </el-form-item>\n      <el-form-item label="网点类型：">\n        <selectCode code="21" v-model="queryConditionEntity.networkType"></selectCode>\n      </el-form-item>\n      <el-form-item label="建设形式：" br>\n        <selectCode code="22" v-model="queryConditionEntity.networkBuildForm"></selectCode>\n      </el-form-item>\n    </moon-query-template>\n  </div>\n</template>\n<script>\nexport default {\n  props: {\n    queryConditionEntity: {\n      type: Object,\n      required: true\n    }\n  },\n  components: {\n  },\n\n  mounted() {},\n  data() {\n    return {\n      //网点字典 动态获取\n      queryShow: false\n    };\n  },\n  computed: {},\n  methods: {\n    onQuery() {\n      this.$emit("onQuery");\n    }\n  }\n};\n<\/script>\n<style lang=\'less\' scoped>\n</style> \n```'},"9c69":function(n,e,t){"use strict";t.r(e);t("a737");var a=t("8e44");let o=t("b68a");function l(n){return n.keys().reduce(((e,t)=>{let a=t.match(/(?<=(\.\/)).*(?=(\.md))/)[0].split("/");return a.length>1?/readme/gi.test(a[a.length-1])?e[a[a.length-2]]=n(t).default:e[a[a.length-1]]=n(t).default:/readme/gi.test(a[0])||(e["moon-"+a[0]]=n(t).default),e}),{})}const d={...l(t("c5f8")),...l(o)};var r={inheritAttrs:!1,name:"",props:{name:{type:String,default:""}},components:{},created(){},mounted(){},data:()=>({text:""}),watch:{name:{async handler(){this.name&&(this.text=await this.getMdText())},immediate:!0}},computed:{},methods:{async getMdText(){if(this.name.startsWith("el-"))window.open(`https://element.eleme.cn/#/zh-CN/component/${this.name.split("-")[1]}`,"_self");else if(this.name.startsWith("dv-")){let n=this.name.split("-"),e=n.reduce(((e,t,a)=>{if(a>0)if(1==a)e+=t;else{if(a!=n.length-1){const n=[...t];n[0]=n[0].toUpperCase(),e+=n.join("")}if(a==n.length-1)if(isNaN(t)){const n=[...t];n[0]=n[0].toUpperCase(),e=e+n.join("")+".html"}else e=e+".html#"+this.name}return e}),"");window.open(`http://datav.jiaminghi.com/guide/${e}`,"_self")}else if(this.name.startsWith("moon-")){if(this.name.startsWith("moon-dv-id-")){const{data:n}=await Object(a.k)({id:this.name.replace("moon-dv-id-","")});if(n){let e=(n.mddoc||"").trim();return e.startsWith("http://")||e.startsWith("https://")?(window.open(e,"_self"),""):e}}}else window.open(`https://www.runoob.com/tags/tag-${this.name}.html`,"_self");return d[this.name]}}},i=(t("43b7"),t("e668")),s=Object(i.a)(r,(function(){var n=this._self._c;return n("el-scrollbar",{staticStyle:{height:"100vh",width:"100vw"}},[n("v-md-preview",{attrs:{text:this.text}})],1)}),[],!1,null,"21e7d3d4",null);e.default=s.exports},a40c:function(n,e,t){},a8d6:function(n,e,t){"use strict";t.r(e),e.default="# moon-dv-echarts-group\n\n-   渲染echarts组件组，flex布局！\n-   [echarts 文档](https://echarts.apache.org/zh/index.html)\n\n### Props\n\n| 参数        | 说明                      | 类型 | 可选值 | 默认值 |\n| ----------- | ------------------------- | ---- | ------ | ------ |\n| options      | 多个echarts 的 option 配置数组    | Array   | -      | -      |\n\n### Slot\n\n| 参数    | 说明 |\n| ------- | ---- |\n| default | echarts组前一个元素 |\n| last | echarts组后一个元素 |"},ad83:function(n,e,t){"use strict";t.r(e),e.default="# moon-dv-echarts\n\n-   echarts 渲染组件, flex 布局\n-   [echarts 文档](https://echarts.apache.org/zh/index.html)\n\n### Props\n\n| 参数   | 说明                   | 类型 | 可选值 | 默认值 |\n| ------ | ---------------------- | ---- | ------ | ------ |\n| option | echarts 的 option 配置 | -    | -      | -      |\n\n### Slot\n\n| 参数    | 说明               |\n| ------- | ------------------ |\n| default | echarts 前一个元素 |\n| last    | echarts 后一个元素 |\n"},b68a:function(n,e,t){var a={"./moon-dialog/readme.md":"bea7","./moon-dropdown/readme.md":"f6ea","./moon-form-template/readme.md":"88e6","./moon-html-dom/readme.md":"d00d","./moon-if-show/Readme.md":"2ed2","./moon-menu/readme.md":"1ace","./moon-phone-demo/readme.md":"8c28","./moon-query-template/readme.md":"94b8","./moon-table-form/readme.md":"cfe3","./moon-table-pagination/readme.md":"4224","./moon-transition/readme.md":"40e0","./moon-validator/readme.md":"2a5b","./readme.md":"05e7","./utils.md":"69a8"};function o(n){var e=l(n);return t(e)}function l(n){if(!t.o(a,n)){var e=new Error("Cannot find module '"+n+"'");throw e.code="MODULE_NOT_FOUND",e}return a[n]}o.keys=function(){return Object.keys(a)},o.resolve=l,n.exports=o,o.id="b68a"},bea7:function(n,e,t){"use strict";t.r(e),e.default="\n# moon-dialog\n\n### 作者：闰月飞鸟；时间：2020/04/02\n### 开发目的\n- 统一 el-dialog 样式\n\n### Props  \n所有props属性\n\n ###  Slot\n- el-dialog所有样式\n  \n "},c5f8:function(n,e,t){var a={"./moon-dv-container/readme.md":"70be","./moon-dv-echarts-group/readme.md":"a8d6","./moon-dv-echarts/readme.md":"ad83","./moon-dv-text/readme.md":"34c9"};function o(n){var e=l(n);return t(e)}function l(n){if(!t.o(a,n)){var e=new Error("Cannot find module '"+n+"'");throw e.code="MODULE_NOT_FOUND",e}return a[n]}o.keys=function(){return Object.keys(a)},o.resolve=l,n.exports=o,o.id="c5f8"},cfe3:function(n,e,t){"use strict";t.r(e),e.default="\n# moon-table-form\n\n### 作者：闰月飞鸟；时间：2022/08/17\n### 开发目的\n- 用表格布局展示表单视图。并且表单单元内容可以随意合并\n\n### Props \n参数 |说明|类型|可选值|默认值\n---|---|---|---|---\n--|el-table组件自带的props|Object|-|-\nconstructData|form表单构造对象， [{  id: '255d2557c336494bb75a97ab92436bfb',  reportFieldName: 'creditCode', reportFieldText: '统一社会信用代码',  spanRow: '1', spanCol: '1'   }]|Array|-|必填\ncolumnNum|表单列数|Number, String|-|6,最大20列\noptions|form表单构造对象中rowspan，colspan对应的属性名|Object|-|{rowspan: 'rowspan'， colspan: 'colspan'}\nlabelFun|设置label单元属性对象,value为当前form单元构造实例对象|Function|-|(value) => { return { text: value };}\nvalueFun|设置value单元属性对象，value为当前form单元构造实例对象|Function|-|(value) => { return { text: value };}\nlabelCellStyle|设置label单元样式,优先级大于cellStyle|Object|-|{}\nvalueCellStyle|设置label单元样式,优先级大于cellStyle|Object|-|{}\nborder|表单边框|String|-|1px solid #ebeef5\nborderInner|表单内边框|String|-|1px solid #ebeef5\n\n###  Slot\n  名称 |说明| 参数\n---|---|---|\ndefautl|作用插槽，接受列数组对象 tableColumn|<template slot-scope=\"{ tableColumn }\"></template>\n\n \n```\n  <template>\n    <div>\n        <el-row>\n            <el-col> 列数<el-input v-model=\"columnNum\" type=\"number\"></el-input> </el-col>\n            <el-col> 边框<el-input v-model=\"border\"></el-input> </el-col>\n            <el-col> 内边框<el-input v-model=\"borderInner\"></el-input></el-col>\n        </el-row>\n\n        <moon-table-form\n            :constructData=\"defineInfo.columnList\"\n            :columnNum=\"columnNum\"\n            :options=\"{ rowspan: 'spanRow', colspan: 'spanCol' }\"\n            :labelFun=\"labelFun\"\n            :valueFun=\"valueFun\"\n            :labelCellStyle=\"{ backgroundColor: ' #f2f9fc', fontWeight: 'bolder' }\"\n            :border=\"border\"\n            :borderInner=\"borderInner\"\n        >\n            <template slot-scope=\"{ tableColumn }\">\n                <el-table-column v-for=\"{ columnKey, hasLabelCell } in tableColumn\" :width=\"hasLabelCell ? '200' : 'auto'\" :key=\"columnKey\" :align=\"hasLabelCell ? 'left' : 'left'\" :label=\"columnKey\">\n                    <template slot-scope=\"scope\">\n                        {{ scope.row[columnKey]?.text || '' }}\n                    </template>\n                </el-table-column>\n            </template>\n        </moon-table-form>\n    </div>\n</template>\n<script>\nimport { getGeneralDataList, tableBySql } from '@/services/dynamic/dynamic.js';\nimport dataObj from './data.js';\nexport default {\n    inheritAttrs: false,\n    name: '',\n    props: {\n        reportCode: {\n            type: String,\n            default: ''\n        },\n        params: {\n            type: Object,\n            default: () => ({})\n        },\n        dynamicComponentMap: {\n            type: Object,\n            default: () => ({})\n        }\n    },\n    components: {},\n    created() {},\n    mounted() {},\n    data() {\n        return {\n            defineInfo: { columnList: [], conditionList: [] },\n            queryCondition: {},\n            columnNum: 6,\n            formData: {},\n            border: '1px solid  ',\n            borderInner: '1px solid  '\n        };\n    },\n    watch: {\n        columnNum: {\n            async handler() {\n                // let {\n                //     data: { list, defineInfo }\n                // } = await getGeneralDataList(this.condition);\n                let { list, defineInfo } = dataObj;\n                this.formData = list && list.length ? list[0] : {};\n                this.defineInfo = defineInfo;\n            },\n            deep: true,\n            immediate: true\n        }\n    },\n    computed: {\n        condition() {\n            return {\n                reportCode: this.reportCode,\n                params: { ...this.params, ...this.queryCondition }\n            };\n        }\n    },\n    methods: {\n        labelFun(value) {\n            return { text: value.reportFieldText };\n        },\n        valueFun(value) {\n            return { text: this.formData[value.reportFieldName + 'Desc'] || this.formData[value.reportFieldName] };\n        },\n        async getDictDataBySql({ id, dictSql }) {\n            let dictDataProp = [];\n            if (!dictSql) return dictDataProp;\n            //执行实时查询并将对应的字段ID塞进store中\n            const res = await tableBySql(id);\n            if (res.data.code === 200) {\n                dictDataProp = res.data.data;\n            }\n            return dictDataProp;\n        }\n    }\n};\n<\/script>\n<style lang=\"less\" scoped>\n.queryView {\n    ::v-deep .el-form-item {\n        margin-bottom: 0;\n    }\n}\n</style>\n\n```\n\n\n###  data.js\n```\nexport default {\n    msg: 'success',\n    code: 200,\n    defineInfo: {\n        id: '36524efcfea248259b6ed9807a4d7616',\n        isDel: 0,\n        creator: '1',\n        createdTime: '2022/08/08 14:15:43',\n        lastUpdatedBy: '1',\n        lastUpdatedTime: '2022/08/16 00:37:22',\n        createdUnit: '4855ba5babad493f81650c80d5e282c0',\n        lastUpdatedUnit: '4855ba5babad493f81650c80d5e282c0',\n        tenantCode: 'SSJKQ',\n        reportCode: 'dwb_corp_basic',\n        reportName: '工商信息',\n        databaseId: 'e51078c716e211eda43e00ff4184a389',\n        remark: '',\n        version: 24,\n        querySql: '',\n        databaseName: '',\n        columnList: [\n            {\n                id: '255d2557c336494bb75a97ab92436bfb',\n                reportFieldName: 'creditCode',\n                reportFieldText: '统一社会信用代码',\n                spanRow: '1',\n                spanCol: '1'\n            },\n            {\n                id: '49513185d49a4a08a7f33946c14d50bd',\n                reportFieldName: 'corpName',\n                reportFieldText: '企业名称',\n                spanRow: '2',\n                spanCol: '3'\n            },\n            {\n                id: '8ee09cc22d8047c4807cad0844d07d84',\n                reportFieldName: 'legalName',\n                reportFieldText: '法定代表人',\n                spanRow: '2',\n                spanCol: '1'\n            },\n            {\n                id: '4d6eba9c070b499d932d23b9b2aabae5',\n                reportFieldName: 'regStatusCode',\n                reportFieldText: '登记状态',\n                spanRow: '3',\n                spanCol: ''\n            },\n            {\n                id: '7ea19ca516194a8496edd84d1292d564',\n                reportFieldName: 'regCaptal',\n                reportFieldText: '注册资本',\n                spanRow: '',\n                spanCol: ''\n            },\n            {\n                id: '92e0b77e063a44878ff7feaf4a519d9f',\n                reportFieldName: 'paidInCaptal',\n                reportFieldText: '实缴资本',\n                spanRow: '',\n                spanCol: ''\n            },\n            {\n                id: '07608e4b3d63469087e432acff0c65ed',\n                reportFieldName: 'establishDate',\n                reportFieldText: '成立日期',\n                spanRow: '',\n                spanCol: ''\n            },\n            {\n                id: 'cfb648bdcd7e4ddb942ae1de56694daf',\n                reportFieldName: 'approvalDate',\n                reportFieldText: '核准日期',\n                spanRow: '',\n                spanCol: ''\n            },\n            {\n                id: '74f67209237d4dfab5afc5d3ec398f31',\n                reportFieldName: 'orgGovCode',\n                reportFieldText: '组织机构代码',\n                spanRow: '',\n                spanCol: ''\n            },\n            {\n                id: '5cd37ff0995943aaaeb73cebd7dc805e',\n                reportFieldName: 'businessRegNo',\n                reportFieldText: '工商注册号',\n                spanRow: '',\n                spanCol: ''\n            },\n            {\n                id: '2f8b81218731470eb1cfbd03b289eaed',\n                reportFieldName: 'taxOrgCode',\n                reportFieldText: '纳税人识别号',\n                spanRow: '',\n                spanCol: ''\n            },\n            {\n                id: '28976451955b497d9dc9839ca0cdb40a',\n                reportFieldName: 'regTypeCode',\n                reportFieldText: '企业类型',\n                spanRow: '',\n                spanCol: ''\n            },\n            {\n                id: 'f22247ed1cee4dce9744e0db6735d030',\n                reportFieldName: 'operTerm',\n                reportFieldText: '营业期限',\n                spanRow: '',\n                spanCol: ''\n            },\n            {\n                id: 'd7eb5454ac1c44e790526a920a318e15',\n                reportFieldName: 'industryTypeCode',\n                reportFieldText: '所属行业',\n                spanRow: '',\n                spanCol: ''\n            },\n            {\n                id: 'cbed37aced984480a29c1d50bc5a884b',\n                reportFieldName: 'importExportRegNo',\n                reportFieldText: '进出口企业代码',\n                spanRow: '',\n                spanCol: ''\n            },\n            {\n                id: '0bb89fc5209541abb20f813b45216a71',\n                reportFieldName: 'corpPeopleRange',\n                reportFieldText: '人员规模',\n                spanRow: '',\n                spanCol: ''\n            },\n            {\n                id: '8d6a27bbda07410d81e197d96f6feba1',\n                reportFieldName: 'joinInsured',\n                reportFieldText: '参保人数',\n                spanRow: '',\n                spanCol: ''\n            },\n            {\n                id: '4f0b3d01fdea4c1c8317aa028af765a1',\n                reportFieldName: 'oldCorpName',\n                reportFieldText: '曾用名',\n                spanRow: '',\n                spanCol: ''\n            },\n            {\n                id: 'ab324efc64d849b0b030b17941caa287',\n                reportFieldName: 'corpEnlishName',\n                reportFieldText: '英文名',\n                spanRow: '',\n                spanCol: '2'\n            },\n            {\n                id: '11a40ccfb17741e2af9e3e3879c3e851',\n                reportFieldName: 'regAddress',\n                reportFieldText: '注册地址',\n                spanRow: '',\n                spanCol: '3'\n            },\n            {\n                id: '485bb51fa330485c9a29079e81a0ee99',\n                reportFieldName: 'businessScope',\n                reportFieldText: '经营范围',\n                spanRow: '',\n                spanCol: '5'\n            }\n        ],\n        conditionList: []\n    },\n    list: [\n        {\n            paidInCaptal: '实缴资本Text',\n            approvalDate: '核准日期Text',\n            taxOrgCode: '纳税人识别号Text',\n            importExportRegNo: '进出口企业代码Text',\n            joinInsured: '参保人数Text',\n            businessRegNo: '工商注册号Text',\n            corpPeopleRange: '人员规模Text',\n            oldCorpName: '曾用名Text',\n            regTypeCode: '10',\n            businessScope:\n                '苏州市张家港市乐之学家政服务有限公司苏州市张家港市乐之学家政服务有限公司苏州市张家港市乐之学家政服务有限公司苏州市张家港市乐之学家政服务有限公司苏州市张家港市乐之学家政服务有限公司苏州市张家港市乐之学家政服务有限公司苏州市张家港市乐之学家政服务有限公司苏州市张家港市乐之学家政服务有限公司苏州市张家港市乐之学家政服务有限公司苏州市张家港市乐之学家政服务有限公司',\n            corpName: '苏州市张家港市乐之学家政服务有限公司',\n            corpEnlishName: '英文名Text',\n            establishDate: 1655308800000,\n            legalName: '曹雪恒',\n            creditCode: '91320582MABP46CH3E',\n            regCaptal: 5,\n            regStatusCode: 'ON_BUSINESS',\n            orgGovCode: '组织机构代码Text',\n            industryTypeCode: '所属行业Text',\n            regAddress: '注册地址Text',\n            operTerm: '营业期限Text'\n        }\n    ]\n};\n\n\n```\n\n"},d00d:function(n,e,t){"use strict";t.r(e),e.default="# moon-html-dom\n\n### 作者：闰月飞鸟；时间：2020/09/07\n\n### 开发目的\n-将字符串 dom 转译成 vue 模板。字符串 dom 支持 vue 的所有模板语法\n\n### Props\n\n| 参数    | 说明                                                                                    | 类型   | 可选值 | 默认值 |\n| ------- | --------------------------------------------------------------------------------------- | ------ | ------ | ------ |\n| htmlDom | 字符 dom,与 vue 模板语法一致，只是变量前缀属性用$符代替，组件会用传入的实体属性进行替换 | String | -      | -      |\n| entity  | 字符 dom 中，变量的前缀对象                                                             | Object | -      | -      |\n\n```javascript\n  <MoonHtmlDom :htmlDom=\"htmlDom\" :entity=\"formData\"></MoonHtmlDom>\n\n  <script>\n        export default{\n            data(){\n                return {\n                    htmlDom:'<div>$m><div>',\n                    formData:{\n                        m:'xxx'\n                    }\n                }\n            }\n        }\n  <\/script>\n\n```\n"},f6ea:function(n,e,t){"use strict";t.r(e),e.default='# moon-dropdown\n\n### 作者：闰月飞鸟；时间：2020/09/02\n\n### 开发目的\n\n-   将 el-dropdown 组件封装，统一条件，将非业务的逻辑提取出来。\n-   简化其单元项的触发方式。 直接通过绑定响应事件来实现触发。页面中不需要通过 command 来触发\n\n### Props\n\n| 参数                 | 说明             | 类型 | 可选值 | 默认值 |\n| -------------------- | ---------------- | ---- | ------ | ------ |\n| el-dropdown 所有属性 | -                | -    | -      | -      |\n| trigger              | 默认设置为 click | -    | -      | click  |\n\n### Slot\n\n-   el-dropdown-menu\n-   el-dropdown-item 点击事件直接通过@click 来绑定即可\n\n```\n   <moon-dropdown style="margin-left: 10px">\n                        <el-button type="text">更多<i class="el-icon-arrow-down"></i></el-button>\n                        <el-dropdown-menu slot="dropdown">\n                            <el-dropdown-item @click="test(scope.row)"><el-button type="text">功能测试</el-button> </el-dropdown-item>\n                            <el-dropdown-item @click="getAddress(scope.row)"> <el-button type="text">配置地址 </el-button></el-dropdown-item>\n                            <el-dropdown-item @click="handleDelete(scope.row)"> <el-button type="text">删除 </el-button></el-dropdown-item>\n                        </el-dropdown-menu>\n                    </moon-dropdown>\n```\n'}}]);